#
# Web Server deployment settings
#
deployment {
    # Remote Web Server host address.
    # Type: String
    # Default value: 0.0.0.0 (all interfaces)
    host = 0.0.0.0

    # Non-secure HTTP port.
    # Type: Int
    # Default value: 8080
    port = 8080

    # Secure HTTP (HTTPS, WSS) port.
    # Type: Int
    sslPort = 443

    ssl {
        # Used to store the server keys (both public and private) along with signed cert.
        # Type: String
        keyStore = /path/to/keystore.jks

        # A certificate alias is the name given to a CA certificate located in the keystore.
        # Type: String
        keyAlias = myalias

        # The password used to access the keystore file when SSL is enabled and
        # SSL client authentication is enabled on the database server
        # Type: String
        keyStorePassword = mypassword

        # Specifies a password for the private key about to be generated
        # Type: String
        privateKeyPassword = mypassword
    }

    #
    # Shutdown
    #
    shutdown {
        # The maximum amount of time for activity to cool down (in milliseconds).
        # Type: Int
        # Default value: 1000
        gracePeriod = 1000

        # The maximum amount of time to wait until server stops gracefully (in milliseconds).
        # Type: Int
        # Default value: 5000
        timeout = 50000
    }

}

#
# Cross Origin Resource Sharing
#
# By default, unlike Katan servers, the web server does not run in an isolated Docker container therefore,
# the network it is on is being exported to the public, configuring CORS is essential
# so that no unwanted connections go through the Web Server.
#
# If you are running the Katan Daemon, allow the configuration of the host on
# which the Katan Daemon is located so that it has access to the Web Server.
#
# Reference: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
#
cors {
    # Allows any network to have access to the Web Server resource sharing network.
    # Set to true if you don't know the origin of the Katan Daemon.
    # Type: Boolean
    # Default: false
    allowAnyHost = false
    hosts = [{
        hostname = localhost
        schemes = [http, https, ws, wss]
    }]
}

#
# Cross-site request forgery (abbreviated as CSRF or XSRF)
#
# Katan's Web Server in conjunction with the Daemon comes with built-in support for CSRF.
# CSRF is a type of malicious exploit of a website where unauthorized commands are submitted
# from a user that the web application trusts.
#
# If you are running Katan on a public network, it is ~EXTREMELY IMPORTANT~ that you configure this section correctly.
#
# Reference: https://wikipedia.org/wiki/Cross-site_request_forgery
#
csrf {
    # Hosts Katan will check to match the actual location of the requested resource.
    # Completely blocking any type of connection other than those hosts.
    # Type: Array of Sections
    hosts = [{
        protocol = http
        hostname = localhost
        port = 8080
    }]
}

#
# JSON Web Token
#
# JSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact and self-contained way for
# securely transmitting information between parties as a JSON object.
# This information can be verified and trusted because it is digitally signed.
# JWTs can be signed using a secret (with the HMAC algorithm) or a public/private key pair using RSA or ECDSA.
#
# Reference: https://jwt.io/
#
jwt {
    # Identifies principal that issued the JWT resource.
    # Change this to your server's static address.
    # Type: String
    issuer = "https://katan.com"

    # Each principal intended to process the JWT MUST identify itself with a value in the audience claim.
    # If the principal processing the claim does not identify itself with a value in the "aud"
    # claim when this claim is present, then the JWT MUST be rejected.
    # Type: String
    audience = jwt-audience

    # The algorithm (HS256) used to sign the JWT means that the secret is a symmetric key that is known
    # by both the sender (WebServer) and the receiver (Daemon). It is negotiated and distributed out of band.
    # Type: String
    secret = ""
}